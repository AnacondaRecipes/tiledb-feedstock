diff --git a/cmake/Modules/FindSpdlog_EP.cmake b/cmake/Modules/FindSpdlog_EP.cmake
index e07c646ff..e7fc56310 100644
--- a/cmake/Modules/FindSpdlog_EP.cmake
+++ b/cmake/Modules/FindSpdlog_EP.cmake
@@ -106,29 +106,14 @@ if (NOT SPDLOG_FOUND)
   endif()
 endif()
 
-if (spdlog_FOUND AND NOT TARGET spdlog::spdlog)
-  add_library(spdlog::spdlog INTERFACE IMPORTED)
-  find_package(fmt QUIET)
-  if (${fmt_FOUND})
-    target_link_libraries(spdlog::spdlog INTERFACE fmt::fmt)
-  endif()
-  set_target_properties(spdlog::spdlog PROPERTIES
-          INTERFACE_INCLUDE_DIRECTORIES "${SPDLOG_INCLUDE_DIR}"
-          )
-  # If the target is defined we need to handle external fmt build types
-elseif(TARGET spdlog::spdlog)
-  if (SPDLOG_FMT_EXTERNAL)
-    # Since we are using header only we need to define this
-    add_definitions("-DSPDLOG_FMT_EXTERNAL=1")
-    find_package(fmt REQUIRED)
-    if (${fmt_FOUND})
-      target_link_libraries(spdlog::spdlog INTERFACE fmt::fmt)
-    endif()
-  endif()
-endif()
-
-
-# If we built a static EP, install it if required.
-if (TILEDB_SPDLOG_EP_BUILT AND TILEDB_INSTALL_STATIC_DEPS)
-  install_target_libs(spdlog::spdlog)
+if (SPDLOG_FOUND AND NOT TARGET Spdlog::Spdlog)
+  add_library(Spdlog::Spdlog INTERFACE IMPORTED)
+# Spdlog comes with pre-bundled fmt (its headers) and it is what we use.
+#  find_package(fmt QUIET)
+#  if (${fmt_FOUND})
+#    target_link_libraries(Spdlog::Spdlog INTERFACE fmt::fmt)
+#  endif()
+  set_target_properties(Spdlog::Spdlog PROPERTIES
+    INTERFACE_INCLUDE_DIRECTORIES "${SPDLOG_INCLUDE_DIR}"
+  )
 endif()
