From d14891934191dbd1fc51e4b429312a549e7439a8 Mon Sep 17 00:00:00 2001
From: Isaiah Norton <isaiah@tiledb.io>
Date: Wed, 30 Dec 2020 16:00:26 -0500
Subject: [PATCH] Patch capnp libkj to fix build with GCC 9

Fixes errors like this:

```
.../ep_capnp/c++/src/kj/main.c++:690:38:   required from here
.../x86_64-conda-linux-gnu/include/c++/9.3.0/bits/stl_tree.h:780:8: error: static assertion failed: comparison object must be invocable as const
  780 |        is_invocable_v<const _Compare&, const _Key&, const _Key&>,
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
make[5]: *** [src/kj/CMakeFiles/kj.dir/main.c++.o] Error 1
make[4]: *** [src/kj/CMakeFiles/kj.dir/all] Error 2
```
---
 cmake/Modules/FindCapnp_EP.cmake              |  5 ++-
 .../ep_capnp/libkj-invokable-const.patch      | 35 +++++++++++++++++++
 2 files changed, 39 insertions(+), 1 deletion(-)
 create mode 100644 cmake/inputs/patches/ep_capnp/libkj-invokable-const.patch

diff --git a/cmake/Modules/FindCapnp_EP.cmake b/cmake/Modules/FindCapnp_EP.cmake
index bf383da6a..f29e0c612 100644
--- a/cmake/Modules/FindCapnp_EP.cmake
+++ b/cmake/Modules/FindCapnp_EP.cmake
@@ -156,10 +156,13 @@ if (NOT CAPNP_FOUND)
           "-DCMAKE_CXX_FLAGS=${CXXFLAGS_DEF}"
           ${TILEDB_EP_BASE}/src/ep_capnp/c++
         UPDATE_COMMAND ""
+        PATCH_COMMAND
+          patch -d ${TILEDB_EP_BASE}/src/ep_capnp/ -N -p1 -i ${TILEDB_CMAKE_INPUTS_DIR}/patches/ep_capnp/libkj-invokable-const.patch
         LOG_DOWNLOAD TRUE
         LOG_CONFIGURE TRUE
         LOG_BUILD TRUE
         LOG_INSTALL TRUE
+        LOG_PATCH TRUE
         LOG_OUTPUT_ON_FAILURE ${TILEDB_LOG_OUTPUT_ON_FAILURE}
       )
     endif()
@@ -171,4 +174,4 @@ if (NOT CAPNP_FOUND)
   else()
     message(FATAL_ERROR "Unable to find Capnp")
   endif()
-endif()
+endif()
diff --git a/cmake/inputs/patches/ep_capnp/libkj-invokable-const.patch b/cmake/inputs/patches/ep_capnp/libkj-invokable-const.patch
new file mode 100644
index 000000000..d4de89f9d
--- /dev/null
+++ b/cmake/inputs/patches/ep_capnp/libkj-invokable-const.patch
@@ -0,0 +1,35 @@
+diff --git a/c++/src/kj/main.c++ b/c++/src/kj/main.c++
+index 4d84294a..d25369f4 100644
+--- a/c++/src/kj/main.c++
++++ b/c++/src/kj/main.c++
+@@ -631,7 +631,7 @@ void MainBuilder::MainImpl::usageError(StringPtr programName, StringPtr message)
+
+ class MainBuilder::Impl::OptionDisplayOrder {
+ public:
+-  bool operator()(const Option* a, const Option* b) {
++  bool operator()(const Option* a, const Option* b) const {
+     if (a == b) return false;
+
+     char aShort = '\0';
+diff --git a/c++/src/kj/time.c++ b/c++/src/kj/time.c++
+index 5b3b4334..ead7e4c1 100644
+--- a/c++/src/kj/time.c++
++++ b/c++/src/kj/time.c++
+@@ -41,7 +41,7 @@ Clock& nullClock() {
+
+ struct TimerImpl::Impl {
+   struct TimerBefore {
+-    bool operator()(TimerPromiseAdapter* lhs, TimerPromiseAdapter* rhs);
++    bool operator()(TimerPromiseAdapter* lhs, TimerPromiseAdapter* rhs) const;
+   };
+   using Timers = std::multiset<TimerPromiseAdapter*, TimerBefore>;
+   Timers timers;
+@@ -75,7 +75,7 @@ private:
+ };
+
+ inline bool TimerImpl::Impl::TimerBefore::operator()(
+-    TimerPromiseAdapter* lhs, TimerPromiseAdapter* rhs) {
++    TimerPromiseAdapter* lhs, TimerPromiseAdapter* rhs) const {
+   return lhs->time < rhs->time;
+ }
+
